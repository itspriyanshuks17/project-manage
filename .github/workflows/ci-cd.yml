name: CI/CD Pipeline

on:
  push:
    branches: [ server ]
  pull_request:
    branches: [ server ]

env:
  NODE_VERSION: '20'

jobs:
  # Lint and Test Job
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: asset_management_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create test environment file
      run: |
        cat > .env << EOF
        NODE_ENV=test
        DB_HOST=127.0.0.1
        DB_USER=root
        DB_PASSWORD=test_password
        DB_NAME=asset_management_test
        DB_PORT=3306
        SESSION_SECRET=test-secret-key
        PORT=3000
        EOF

    - name: Wait for MySQL
      run: |
        for i in {30..0}; do
          if mysqladmin ping -h "127.0.0.1" --silent; then
            break
          fi
          echo 'MySQL is unavailable - sleeping'
          sleep 1
        done

    - name: Setup test database
      run: |
        mysql -h 127.0.0.1 -u root -ptest_password asset_management_test < database.sql

    - name: Run linting (if eslint is configured)
      run: |
        if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ]; then
          npx eslint . --ext .js,.jsx,.ts,.tsx
        else
          echo "No ESLint configuration found, skipping linting"
        fi
      continue-on-error: true

    - name: Run tests
      run: |
        if npm run test --if-present; then
          echo "Tests passed"
        else
          echo "No tests defined or tests failed"
          # You can uncomment the next line to fail the build if tests fail
          # exit 1
        fi

  # Security Scan Job
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerable dependencies
      run: |
        if npm audit --audit-level=high --json > audit-results.json; then
          echo "No high-severity vulnerabilities found"
        else
          echo "High-severity vulnerabilities detected:"
          cat audit-results.json
          # Uncomment to fail on high vulnerabilities
          # exit 1
        fi

  # Notify on deployment
  notify:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: [test, security]
    if: always()
    
    steps:
    - name: Notify success
      if: needs.test.result == 'success' && needs.security.result == 'success'
      run: |
        echo "✅ Build and tests successful!"
        # Add notification logic here (Slack, Discord, email, etc.)
        
    - name: Notify failure
      if: needs.test.result == 'failure' || needs.security.result == 'failure'
      run: |
        echo "❌ Build or tests failed!"
        # Add notification logic here (Slack, Discord, email, etc.)
